name: Generate testdata

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  generate-testdata:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - uses: actions/checkout@v4

      - name: Generate testdata
        shell: bash
        run: |
          rm -rf testdata/
          ./src/run_all.sh
          git add testdata

      - name: List testdata files
        run: ls -slah -R testdata

      - name: Check if testdata changed
        id: testdata-changed
        shell: bash
        run: |
          git fetch origin
          if git ls-tree --name-only origin/main | grep -q '^testdata$'; then
            if git diff --exit-code origin/main -- testdata; then
              echo "changed=false" >> $GITHUB_OUTPUT
            else
              echo "changed=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Close existing PRs
        if: steps.testdata-changed.outputs.changed == 'true'
        run: |
          open_prs=$(gh pr list --label testdata --state open --json number --jq '.[].number')
          for pr in $open_prs; do
            gh pr close $pr
          done
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Issue a Pull Request
        if: steps.testdata-changed.outputs.changed == 'true'
        run: |
          BRANCH_NAME="notice/$(date +%Y%m%d%H%M%S)"
          git checkout -b "$BRANCH_NAME"
          git config --local user.email "quesma-bot@quesma.com"
          git config --local user.name "Quesma[bot]"
          git add testdata
          git commit -m "Update testdata"
          git push origin HEAD
          gh pr create -l testdata -l automation --title "Update testdata" --body "There's been a change in the specification of testdata." --base main --head "$BRANCH_NAME"
        env:
          GH_TOKEN: ${{ github.token }}